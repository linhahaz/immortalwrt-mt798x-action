name: Build ImmortalWrt for MT7981

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'Enable SSH debugging'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-24.10
  REPO_BRANCH: 2410
  TARGET: mediatek/mt7981
  DEVICE: abt_asr3000
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup build environment
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install \
          build-essential ccache clang flex g++ gawk gcc-multilib gettext git \
          libncurses5-dev libssl-dev libtool-bin python3 python3-distutils \
          rsync unzip zlib1g-dev file wget curl jq
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      run: |
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git packages https://git.openwrt.org/feed/packages.git" >> feeds.conf.default
        echo "src-git luci https://git.openwrt.org/project/luci.git" >> feeds.conf.default

    - name: Update feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Apply default configuration
      run: |
        cd openwrt
        cat > .config <<'EOF'
CONFIG_TARGET_mediatek=y
CONFIG_TARGET_mediatek_mt7981=y
CONFIG_TARGET_DEVICE_mediatek_mt7981_DEVICE_abt_asr3000=y
CONFIG_LINUX_5_4=y
CONFIG_PACKAGE_luci-theme-argon=y
CONFIG_PACKAGE_luci-app-homeproxy=y
CONFIG_MTK_HNAT_V3=y
CONFIG_PACKAGE_openssh-sftp-server=y
CONFIG_PACKAGE_htop=y
CONFIG_PACKAGE_tcpdump=y
EOF
        make defconfig

    - name: SSH debug (optional)
      uses: mxschmitt/action-tmate@v3
      if: inputs.ssh == 'true'

    - name: Download packages
      run: |
        cd openwrt
        make -j$(($(nproc) + 1)) download
        find dl -size -1024c -delete

    - name: Build firmware
      run: |
        cd openwrt
        make -j$(($(nproc) + 1)) || make -j1 V=s
        echo "firmware_path=bin/targets/$TARGET" >> $GITHUB_OUTPUT

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-$DEVICE-$(date +%Y%m%d)
        path: openwrt/bin/targets/$TARGET/*.bin
        if-no-files-found: error
        retention-days: 7

    - name: Create release
      uses: softprops/action-gh-release@v2
      if: success()
      with:
        tag_name: build-$(date +%Y%m%d-%H%M)
        files: openwrt/bin/targets/$TARGET/*.bin
        generate_release_notes: true
