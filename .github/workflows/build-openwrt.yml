name: Build ImmortalWrt for MT7981

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'Enable SSH debugging'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-24.10
  REPO_BRANCH: 2410
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup build environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install \
          build-essential ccache clang flex g++ gawk gcc-multilib gettext git \
          libncurses5-dev libssl-dev libtool-bin python3 python3-distutils \
          rsync unzip zlib1g-dev file wget curl jq
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      run: |
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
        [ -e "$FEEDS_CONF" ] && cp "$FEEDS_CONF" openwrt/feeds.conf.default

    - name: Update and install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Apply configuration
      run: |
        cd openwrt
        [ -e "$CONFIG_FILE" ] && cp "$CONFIG_FILE" .config || {
          cat > .config <<'EOF'
CONFIG_TARGET_mediatek=y
CONFIG_TARGET_mediatek_mt7981=y
CONFIG_TARGET_DEVICE_mediatek_mt7981_DEVICE_abt_asr3000=y
CONFIG_PACKAGE_luci-theme-argon=y
CONFIG_PACKAGE_luci-app-homeproxy=y
CONFIG_MTK_HNAT_V3=y
EOF
        }
        make defconfig

    - name: SSH debug (optional)
      uses: mxschmitt/action-tmate@v3
      if: inputs.ssh == 'true'

    - name: Download packages
      run: |
        cd openwrt
        make -j$(($(nproc) + 1)) download
        find dl -size -1024c -delete

    - name: Build firmware
      id: build
      run: |
        cd openwrt
        make -j$(($(nproc) + 1)) || make -j1 V=s
        FIRMWARE_PATH=$(find bin/targets -name "*.bin" | head -1)
        echo "firmware_path=${FIRMWARE_PATH%/*}" >> $GITHUB_OUTPUT
        echo "firmware_name=${FIRMWARE_PATH##*/}" >> $GITHUB_OUTPUT

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-${{ steps.build.outputs.firmware_name }}
        path: openwrt/${{ steps.build.outputs.firmware_path }}/${{ steps.build.outputs.firmware_name }}
        if-no-files-found: error
        retention-days: 7

    - name: Create release
      if: success() && env.UPLOAD_FIRMWARE == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: build-$(date +%Y%m%d-%H%M)
        files: openwrt/${{ steps.build.outputs.firmware_path }}/${{ steps.build.outputs.firmware_name }}
        generate_release_notes: true
